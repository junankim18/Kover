# Generated by Django 3.1.5 on 2021-02-04 09:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('grade', models.IntegerField(default=0, verbose_name='유저 등급')),
                ('created_at', models.DateTimeField(verbose_name='계정 생성 날짜')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hall_name', models.CharField(max_length=50, verbose_name='공연장 이름')),
                ('hall_lat', models.IntegerField(verbose_name='공연장 위도')),
                ('hall_lng', models.IntegerField(verbose_name='공연장 경도')),
                ('hall_addr', models.TextField(verbose_name='공연장 주소')),
                ('hall_trans', models.TextField(verbose_name='공연장 교통편')),
            ],
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('people_type', models.CharField(max_length=30, verbose_name='직업')),
                ('people_name', models.CharField(max_length=30, verbose_name='이름')),
            ],
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time10', models.TimeField(verbose_name='10시')),
                ('time10_5', models.TimeField(verbose_name='10시 30분')),
                ('time11', models.TimeField(verbose_name='11시')),
                ('time11_5', models.TimeField(verbose_name='11시 30분')),
                ('time12', models.TimeField(verbose_name='12시')),
                ('time12_5', models.TimeField(verbose_name='12시 30분')),
                ('time13', models.TimeField(verbose_name='13시')),
                ('time13_5', models.TimeField(verbose_name='13시 30분')),
                ('time14', models.TimeField(verbose_name='14시')),
                ('time14_5', models.TimeField(verbose_name='14시 30분')),
                ('time15', models.TimeField(verbose_name='15시')),
                ('time15_5', models.TimeField(verbose_name='15시 30분')),
                ('time16', models.TimeField(verbose_name='16시')),
                ('time16_5', models.TimeField(verbose_name='16시 30분')),
                ('time17', models.TimeField(verbose_name='17시')),
                ('time17_5', models.TimeField(verbose_name='17시 30분')),
                ('time18', models.TimeField(verbose_name='18시')),
                ('time18_5', models.TimeField(verbose_name='18시 30분')),
                ('time19', models.TimeField(verbose_name='19시')),
                ('time19_5', models.TimeField(verbose_name='19시 30분')),
                ('time20', models.TimeField(verbose_name='20시')),
                ('time20_5', models.TimeField(verbose_name='20시 30분')),
                ('time21', models.TimeField(verbose_name='21시')),
                ('time21_5', models.TimeField(verbose_name='21시 30분')),
                ('time22', models.TimeField(verbose_name='22시')),
                ('time22_5', models.TimeField(verbose_name='22시 30분')),
                ('time23', models.TimeField(verbose_name='23시')),
            ],
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_type', models.CharField(choices=[('play', '연극'), ('musical', '뮤지컬')], max_length=20)),
                ('show_name', models.CharField(max_length=50, verbose_name='공연 이름')),
                ('show_poster', models.ImageField(blank=True, upload_to='idea_image/%Y/%m/%d', verbose_name='공연 포스터')),
                ('show_date_start', models.DateTimeField(verbose_name='공연 시작일')),
                ('show_date_end', models.DateTimeField(verbose_name='공연 종료일')),
                ('show_runtime', models.TimeField(verbose_name='공연 런타임')),
                ('show_intermission', models.TimeField(verbose_name='공연 인터미션')),
                ('show_detail', models.TextField(verbose_name='공연 정보')),
                ('show_actor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='show_actor', to='kover.people')),
                ('show_director', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='show_director', to='kover.people')),
                ('show_hall', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='show_hall', to='kover.hall')),
                ('show_time', models.ManyToManyField(to='kover.Time')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_grade', models.IntegerField(verbose_name='리뷰 별점')),
                ('review_created_at', models.DateTimeField(auto_now_add=True, verbose_name='리뷰 작성 날짜')),
                ('review_watched_at', models.DateField(verbose_name='작품 관람 날짜')),
                ('review_like', models.IntegerField(default=0, verbose_name='리뷰 좋아요 개수')),
                ('review_content', models.TextField(blank=True, verbose_name='리뷰 내용')),
                ('review_img', models.ImageField(blank=True, upload_to='', verbose_name='리뷰 사진')),
                ('review_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_author', to=settings.AUTH_USER_MODEL)),
                ('review_show', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_show', to='kover.show')),
            ],
        ),
        migrations.CreateModel(
            name='Feed_post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_title', models.CharField(max_length=60, verbose_name='피드 제목')),
                ('feed_content', models.TextField(verbose_name='피드 내용')),
                ('feed_like', models.IntegerField(default=0, verbose_name='피드 좋아요 개수')),
                ('feed_created_at', models.DateTimeField(auto_now_add=True, verbose_name='피드 생성 날짜')),
                ('feed_type', models.CharField(choices=[('play_lib', '연극 자유게시판'), ('play_inf', '연극 정보게시판'), ('musical_lib', '뮤지컬 자유게시판'), ('musical_inf', '뮤지컬 정보게시판'), ('question', '질문게시판')], max_length=20)),
                ('feed_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_author', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feed_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_content', models.TextField(verbose_name='댓글 내용')),
                ('comment_created_at', models.DateTimeField(auto_now_add=True, verbose_name='댓글 작성일자')),
                ('comment_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_author', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('comment_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_post', to='kover.feed_post', verbose_name='글제목')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='interested_show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='interested_show', to='kover.show', verbose_name='관심 공연'),
        ),
        migrations.AddField(
            model_name='user',
            name='like_people',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='like_people', to='kover.people', verbose_name='관심 배우'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='watched_show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='watched_show', to='kover.show', verbose_name='관람 공연'),
        ),
    ]
